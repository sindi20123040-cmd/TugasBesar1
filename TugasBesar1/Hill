# ==============================
# Program: Hill Cipher (2x2 matrix, hasil otomatis disimpan ke file)
# ==============================
import numpy as np

# Fungsi untuk konversi huruf ke angka (A=0, B=1, ... Z=25)
def text_to_numbers(text):
    text = text.upper().replace(" ", "")
    return [ord(c) - 65 for c in text]

# Fungsi untuk konversi angka ke huruf
def numbers_to_text(numbers):
    return ''.join([chr((num % 26) + 65) for num in numbers])

# Fungsi enkripsi Hill Cipher
def hill_encrypt(plaintext, key_matrix):
    plaintext = plaintext.upper().replace(" ", "")
    if len(plaintext) % 2 != 0:
        plaintext += "X"  # tambahkan X jika panjang ganjil

    encrypted_numbers = []
    for i in range(0, len(plaintext), 2):
        pair = np.array(text_to_numbers(plaintext[i:i+2]))
        result = np.dot(key_matrix, pair) % 26
        encrypted_numbers.extend(result)
    return numbers_to_text(encrypted_numbers)

# Fungsi dekripsi Hill Cipher
def hill_decrypt(ciphertext, key_matrix):
    det = int(np.round(np.linalg.det(key_matrix)))
    det_inv = None

    # cari invers determinan mod 26
    for i in range(26):
        if (det * i) % 26 == 1:
            det_inv = i
            break

    if det_inv is None:
        raise ValueError("Matriks kunci tidak memiliki invers mod 26, ganti kunci!")

    # matriks adjoin
    adjugate = np.array([[key_matrix[1][1], -key_matrix[0][1]],
                         [-key_matrix[1][0], key_matrix[0][0]]])
    inverse_matrix = (det_inv * adjugate) % 26

    decrypted_numbers = []
    for i in range(0, len(ciphertext), 2):
        pair = np.array(text_to_numbers(ciphertext[i:i+2]))
        result = np.dot(inverse_matrix, pair) % 26
        decrypted_numbers.extend(result)
    return numbers_to_text(decrypted_numbers)


# ==============================
# Program utama
# ==============================
print("=== Program Hill Cipher (2x2) ===")

plaintext = input("Masukkan teks yang ingin dienkripsi: ").upper()

print("\nMasukkan elemen matriks kunci 2x2 (angka 0–25):")
a = int(input("a11: "))
b = int(input("a12: "))
c = int(input("a21: "))
d = int(input("a22: "))
key_matrix = np.array([[a, b], [c, d]])

cipher = hill_encrypt(plaintext, key_matrix)
decrypted = hill_decrypt(cipher, key_matrix)

# tampilkan hasil
print("\nHasil Enkripsi :", cipher)
print("Hasil Dekripsi :", decrypted)

# simpan hasil ke file
filename = "hasil_hill.txt"
with open(filename, "w") as file:
    file.write("=== HASIL PROGRAM HILL CIPHER ===\n")
    file.write(f"Teks asli     : {plaintext}\n")
    file.write(f"Matriks kunci :\n{key_matrix}\n")
    file.write(f"Hasil enkripsi: {cipher}\n")
    file.write(f"Hasil dekripsi: {decrypted}\n")

print(f"\nHasil berhasil disimpan di file '{filename}' ✅")
